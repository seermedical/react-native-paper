// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders data table cell 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      false,
      Array [
        Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "row",
        },
        undefined,
        undefined,
      ],
    ]
  }
>
  <Text
    numberOfLines={1}
    style={
      Array [
        Object {
          "color": "#000000",
          "fontFamily": "System",
          "fontWeight": "400",
        },
        Object {
          "textAlign": "left",
        },
        undefined,
      ]
    }
  >
    Cupcake
  </Text>
</View>
`;

exports[`renders data table header 1`] = `
<View
  style={
    Array [
      Object {
        "borderBottomWidth": 1,
        "flexDirection": "row",
        "height": 48,
        "paddingHorizontal": 16,
      },
      Object {
        "borderBottomColor": "rgba(0, 0, 0, 0.12)",
      },
      undefined,
    ]
  }
>
  <View
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignContent": "center",
          "flex": 1,
          "flexDirection": "row",
          "paddingVertical": 12,
        },
        undefined,
        undefined,
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        Array [
          Object {
            "color": "#000000",
            "fontFamily": "System",
            "fontWeight": "400",
          },
          Object {
            "textAlign": "left",
          },
          Array [
            Object {
              "alignItems": "center",
              "fontSize": 12,
              "fontWeight": "500",
              "lineHeight": 24,
            },
            Object {
              "maxHeight": 24,
            },
            Object {},
            Object {
              "color": "rgba(0, 0, 0, 0.6)",
            },
            undefined,
          ],
        ]
      }
    >
      Dessert
    </Text>
  </View>
  <View
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignContent": "center",
          "flex": 1,
          "flexDirection": "row",
          "paddingVertical": 12,
        },
        undefined,
        undefined,
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        Array [
          Object {
            "color": "#000000",
            "fontFamily": "System",
            "fontWeight": "400",
          },
          Object {
            "textAlign": "left",
          },
          Array [
            Object {
              "alignItems": "center",
              "fontSize": 12,
              "fontWeight": "500",
              "lineHeight": 24,
            },
            Object {
              "maxHeight": 24,
            },
            Object {},
            Object {
              "color": "rgba(0, 0, 0, 0.6)",
            },
            undefined,
          ],
        ]
      }
    >
      Calories
    </Text>
  </View>
</View>
`;

exports[`renders data table pagination 1`] = `
<View
  accessibilityLabel="pagination-container"
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "flexWrap": "wrap",
        "justifyContent": "flex-end",
        "paddingLeft": 16,
      },
      undefined,
    ]
  }
>
  <Text
    accessibilityLabel="label"
    numberOfLines={3}
    style={
      Array [
        Object {
          "color": "#000000",
          "fontFamily": "System",
          "fontWeight": "400",
        },
        Object {
          "textAlign": "left",
        },
        Array [
          Object {
            "fontSize": 12,
            "marginRight": 16,
          },
          Object {
            "color": "rgba(0, 0, 0, 0.6)",
          },
        ],
      ]
    }
  />
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View
      accessibilityLabel="chevron-left"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "margin": 6,
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 18,
              "height": 36,
              "width": 36,
            },
            false,
            undefined,
          ],
        ]
      }
    >
      <View>
        <Text
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "color": "#000000",
                "fontSize": 24,
              },
            ]
          }
        >
          □
        </Text>
      </View>
    </View>
    <View
      accessibilityLabel="chevron-right"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "margin": 6,
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 18,
              "height": 36,
              "width": 36,
            },
            false,
            undefined,
          ],
        ]
      }
    >
      <View>
        <Text
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "color": "#000000",
                "fontSize": 24,
              },
            ]
          }
        >
          □
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders data table pagination with fast-forward buttons 1`] = `
<View
  accessibilityLabel="pagination-container"
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "flexWrap": "wrap",
        "justifyContent": "flex-end",
        "paddingLeft": 16,
      },
      undefined,
    ]
  }
>
  <Text
    accessibilityLabel="label"
    numberOfLines={3}
    style={
      Array [
        Object {
          "color": "#000000",
          "fontFamily": "System",
          "fontWeight": "400",
        },
        Object {
          "textAlign": "left",
        },
        Array [
          Object {
            "fontSize": 12,
            "marginRight": 16,
          },
          Object {
            "color": "rgba(0, 0, 0, 0.6)",
          },
        ],
      ]
    }
  >
    11-20 of 150
  </Text>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View
      accessibilityLabel="page-first"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "margin": 6,
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 18,
              "height": 36,
              "width": 36,
            },
            false,
            undefined,
          ],
        ]
      }
    >
      <View>
        <Text
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "color": "#000000",
                "fontSize": 24,
              },
            ]
          }
        >
          □
        </Text>
      </View>
    </View>
    <View
      accessibilityLabel="chevron-left"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "margin": 6,
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 18,
              "height": 36,
              "width": 36,
            },
            false,
            undefined,
          ],
        ]
      }
    >
      <View>
        <Text
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "color": "#000000",
                "fontSize": 24,
              },
            ]
          }
        >
          □
        </Text>
      </View>
    </View>
    <View
      accessibilityLabel="chevron-right"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "margin": 6,
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 18,
              "height": 36,
              "width": 36,
            },
            false,
            undefined,
          ],
        ]
      }
    >
      <View>
        <Text
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "color": "#000000",
                "fontSize": 24,
              },
            ]
          }
        >
          □
        </Text>
      </View>
    </View>
    <View
      accessibilityLabel="page-last"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "margin": 6,
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 18,
              "height": 36,
              "width": 36,
            },
            false,
            undefined,
          ],
        ]
      }
    >
      <View>
        <Text
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "color": "#000000",
                "fontSize": 24,
              },
            ]
          }
        >
          □
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders data table pagination with label 1`] = `
<View
  accessibilityLabel="pagination-container"
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "flexWrap": "wrap",
        "justifyContent": "flex-end",
        "paddingLeft": 16,
      },
      undefined,
    ]
  }
>
  <Text
    accessibilityLabel="label"
    numberOfLines={3}
    style={
      Array [
        Object {
          "color": "#000000",
          "fontFamily": "System",
          "fontWeight": "400",
        },
        Object {
          "textAlign": "left",
        },
        Array [
          Object {
            "fontSize": 12,
            "marginRight": 16,
          },
          Object {
            "color": "rgba(0, 0, 0, 0.6)",
          },
        ],
      ]
    }
  >
    11-20 of 150
  </Text>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View
      accessibilityLabel="chevron-left"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "margin": 6,
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 18,
              "height": 36,
              "width": 36,
            },
            false,
            undefined,
          ],
        ]
      }
    >
      <View>
        <Text
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "color": "#000000",
                "fontSize": 24,
              },
            ]
          }
        >
          □
        </Text>
      </View>
    </View>
    <View
      accessibilityLabel="chevron-right"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "margin": 6,
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 18,
              "height": 36,
              "width": 36,
            },
            false,
            undefined,
          ],
        ]
      }
    >
      <View>
        <Text
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "color": "#000000",
                "fontSize": 24,
              },
            ]
          }
        >
          □
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders data table pagination with options select 1`] = `
<View
  accessibilityLabel="pagination-container"
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "flexWrap": "wrap",
        "justifyContent": "flex-end",
        "paddingLeft": 16,
      },
      undefined,
    ]
  }
>
  <View
    accessibilityLabel="Options Select"
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "marginVertical": 6,
      }
    }
  >
    <Text
      accessibilityLabel="selectPageDropdownLabel"
      numberOfLines={3}
      style={
        Array [
          Object {
            "color": "#000000",
            "fontFamily": "System",
            "fontWeight": "400",
          },
          Object {
            "textAlign": "left",
          },
          Array [
            Object {
              "fontSize": 12,
              "marginRight": 16,
            },
            Object {
              "color": "rgba(0, 0, 0, 0.6)",
            },
          ],
        ]
      }
    >
      Rows per page
    </Text>
    <View
      collapsable={false}
    >
      <View
        style={
          Object {
            "backgroundColor": "transparent",
            "borderColor": "rgba(0, 0, 0, 0.29)",
            "borderRadius": 4,
            "borderStyle": "solid",
            "borderWidth": 0.5,
            "elevation": 0,
            "marginRight": 16,
            "minWidth": 64,
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
            "textAlign": "center",
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            Object {
              "disabled": undefined,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 4,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                Object {
                  "flexDirection": "row-reverse",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "marginLeft": -4,
                  "marginRight": 12,
                }
              }
            >
              <Text
                accessibilityElementsHidden={true}
                importantForAccessibility="no-hide-descendants"
                pointerEvents="none"
                selectable={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                    },
                    Object {
                      "color": "#6200ee",
                      "fontSize": 16,
                    },
                  ]
                }
              >
                □
              </Text>
            </View>
            <Text
              numberOfLines={1}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontFamily": "System",
                    "fontWeight": "400",
                  },
                  Object {
                    "textAlign": "left",
                  },
                  Array [
                    Object {
                      "letterSpacing": 1,
                      "marginHorizontal": 16,
                      "marginVertical": 9,
                      "textAlign": "center",
                    },
                    undefined,
                    Object {
                      "textTransform": "uppercase",
                    },
                    Object {
                      "color": "#6200ee",
                      "fontFamily": "System",
                      "fontWeight": "500",
                    },
                    Object {
                      "fontFamily": "System",
                      "fontWeight": "500",
                    },
                    undefined,
                  ],
                ]
              }
            >
              2
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <Text
    accessibilityLabel="label"
    numberOfLines={3}
    style={
      Array [
        Object {
          "color": "#000000",
          "fontFamily": "System",
          "fontWeight": "400",
        },
        Object {
          "textAlign": "left",
        },
        Array [
          Object {
            "fontSize": 12,
            "marginRight": 16,
          },
          Object {
            "color": "rgba(0, 0, 0, 0.6)",
          },
        ],
      ]
    }
  >
    11-20 of 150
  </Text>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View
      accessibilityLabel="page-first"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "margin": 6,
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 18,
              "height": 36,
              "width": 36,
            },
            false,
            undefined,
          ],
        ]
      }
    >
      <View>
        <Text
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "color": "#000000",
                "fontSize": 24,
              },
            ]
          }
        >
          □
        </Text>
      </View>
    </View>
    <View
      accessibilityLabel="chevron-left"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "margin": 6,
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 18,
              "height": 36,
              "width": 36,
            },
            false,
            undefined,
          ],
        ]
      }
    >
      <View>
        <Text
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "color": "#000000",
                "fontSize": 24,
              },
            ]
          }
        >
          □
        </Text>
      </View>
    </View>
    <View
      accessibilityLabel="chevron-right"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "margin": 6,
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 18,
              "height": 36,
              "width": 36,
            },
            false,
            undefined,
          ],
        ]
      }
    >
      <View>
        <Text
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "color": "#000000",
                "fontSize": 24,
              },
            ]
          }
        >
          □
        </Text>
      </View>
    </View>
    <View
      accessibilityLabel="page-last"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "margin": 6,
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 18,
              "height": 36,
              "width": 36,
            },
            false,
            undefined,
          ],
        ]
      }
    >
      <View>
        <Text
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "color": "#000000",
                "fontSize": 24,
              },
            ]
          }
        >
          □
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders data table title with press handler 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "alignContent": "center",
        "flex": 1,
        "flexDirection": "row",
        "paddingVertical": 12,
      },
      undefined,
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "height": 24,
        "justifyContent": "center",
        "transform": Array [
          Object {
            "rotate": "180deg",
          },
        ],
      }
    }
  >
    <Text
      accessibilityElementsHidden={true}
      importantForAccessibility="no-hide-descendants"
      pointerEvents="none"
      selectable={false}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "color": "#000000",
            "fontSize": 16,
          },
        ]
      }
    >
      □
    </Text>
  </View>
  <Text
    numberOfLines={1}
    style={
      Array [
        Object {
          "color": "#000000",
          "fontFamily": "System",
          "fontWeight": "400",
        },
        Object {
          "textAlign": "left",
        },
        Array [
          Object {
            "alignItems": "center",
            "fontSize": 12,
            "fontWeight": "500",
            "lineHeight": 24,
          },
          Object {
            "maxHeight": 24,
          },
          Object {},
          Object {
            "marginLeft": 8,
          },
          undefined,
        ],
      ]
    }
  >
    Dessert
  </Text>
</View>
`;

exports[`renders data table title with sort icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "alignContent": "center",
        "flex": 1,
        "flexDirection": "row",
        "paddingVertical": 12,
      },
      undefined,
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "height": 24,
        "justifyContent": "center",
        "transform": Array [
          Object {
            "rotate": "180deg",
          },
        ],
      }
    }
  >
    <Text
      accessibilityElementsHidden={true}
      importantForAccessibility="no-hide-descendants"
      pointerEvents="none"
      selectable={false}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "color": "#000000",
            "fontSize": 16,
          },
        ]
      }
    >
      □
    </Text>
  </View>
  <Text
    numberOfLines={1}
    style={
      Array [
        Object {
          "color": "#000000",
          "fontFamily": "System",
          "fontWeight": "400",
        },
        Object {
          "textAlign": "left",
        },
        Array [
          Object {
            "alignItems": "center",
            "fontSize": 12,
            "fontWeight": "500",
            "lineHeight": 24,
          },
          Object {
            "maxHeight": 24,
          },
          Object {},
          Object {
            "marginLeft": 8,
          },
          undefined,
        ],
      ]
    }
  >
    Dessert
  </Text>
</View>
`;

exports[`renders right aligned data table cell 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      false,
      Array [
        Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "row",
        },
        Object {
          "justifyContent": "flex-end",
        },
        undefined,
      ],
    ]
  }
>
  <Text
    numberOfLines={1}
    style={
      Array [
        Object {
          "color": "#000000",
          "fontFamily": "System",
          "fontWeight": "400",
        },
        Object {
          "textAlign": "left",
        },
        undefined,
      ]
    }
  >
    356
  </Text>
</View>
`;

exports[`renders right aligned data table title 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "alignContent": "center",
        "flex": 1,
        "flexDirection": "row",
        "paddingVertical": 12,
      },
      Object {
        "justifyContent": "flex-end",
      },
      undefined,
    ]
  }
>
  <Text
    numberOfLines={1}
    style={
      Array [
        Object {
          "color": "#000000",
          "fontFamily": "System",
          "fontWeight": "400",
        },
        Object {
          "textAlign": "left",
        },
        Array [
          Object {
            "alignItems": "center",
            "fontSize": 12,
            "fontWeight": "500",
            "lineHeight": 24,
          },
          Object {
            "maxHeight": 24,
          },
          Object {},
          Object {
            "color": "rgba(0, 0, 0, 0.6)",
          },
          undefined,
        ],
      ]
    }
  >
    Calories
  </Text>
</View>
`;
